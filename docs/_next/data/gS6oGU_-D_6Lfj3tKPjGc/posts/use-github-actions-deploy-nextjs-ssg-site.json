{"pageProps":{"postData":{"id":"use-github-actions-deploy-nextjs-ssg-site","contentHtml":"<figure>\n\t<img src='/images/use-github-actions-deploy-nextjs-ssg-site.jpeg'>\n\t<figcaption>Source: <a href=\"https://www.reddit.com/r/ProgrammerHumor/comments/f0ag3i/automation/\">Reddit</a></figcaption>\n</figure>\n<p>Let's use GitHub Actions to create a basic deployment pipeline for a Next.js SSG site hosted on Github Pages.</p>\n<p>For reference, here’s the <a href=\"https://github.com/suhanw/suhanw.github.io\">Github repo</a> for the code used in this article.</p>\n<hr>\n<h3>Optional Readings</h3>\n<p>This article will be laser-focused on setting up GitHub Actions, so I may gloss over technical details I consider ancillary. Here are some background readings if you're interested:</p>\n<ul>\n<li>\n<p>The <a href=\"https://nextjs.org/docs/advanced-features/static-html-export\">docs</a> on how to build an SSG site with Next.js. For the purpose of this article, AYNTK is to use the <code class=\"language-unknown\">next build</code> and <code class=\"language-unknown\">next export</code> commands to generate the files for a static site.</p>\n</li>\n<li>\n<p>The <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site\">docs</a> on how to publish a static site on GitHub Pages. For the purpose of this article, AYNTK is to commit and push the build files within the <code class=\"language-unknown\">docs</code> folder in the project root directory to deploy the site.</p>\n</li>\n<li>\n<p>The <a href=\"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#the-components-of-github-actions\">definitions</a> of the different components of a GitHub Actions pipeline.</p>\n</li>\n</ul>\n<hr>\n<h3>Big Picture</h3>\n<p>Let's create a GitHub Actions pipeline to automate the following steps:</p>\n<ol>\n<li>Check out the GitHub repo</li>\n<li>Setup Node.js</li>\n<li>Install dependencies (or use cache if no changes)</li>\n<li>Build the files for the static site (or use cache if no changes)</li>\n<li>Cache dependencies and source files</li>\n<li>Commit and push the build files to repo</li>\n</ol>\n<hr>\n<h3>Create a Workflow</h3>\n<p>GitHub Actions uses YAML syntax to define the events, jobs, and steps. These YAML files are stored in the code repository, in a directory called <code class=\"language-unknown\">.github/workflows</code>. So let's create a YAML file to define the deployment workflow.</p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ./.github/workflows/deploy.workflow.yml</span>\n\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> deploy<span class=\"token punctuation\">-</span>workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span> <span class=\"token comment\"># [A]</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy-job</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest <span class=\"token comment\"># [B]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2 <span class=\"token comment\"># [C]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2 <span class=\"token comment\"># [D]</span>\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'12'</span>\n</code></pre></div>\n<p>Annotations of the code comments above:</p>\n<p><strong>[A]</strong> Pushing a commit to the GitHub repo is the event that triggers the workflow.<br>\n<strong>[B]</strong> Configures the job to run on a fresh Ubuntu Linux virtual machine hosted by GitHub (aka the Runner).<br>\n<strong>[C]</strong> The <a href=\"https://github.com/actions/checkout\">action</a> to check out the repo and download the code into the Runner.<br>\n<strong>[D]</strong> The <a href=\"https://github.com/actions/setup-node\">action</a> to install Node.js in the Runner, and allow us to run <code class=\"language-unknown\">npm</code> commands.</p>\n<hr>\n<p>Next, add the step to install the project dependencies in the Runner, which include the <code class=\"language-unknown\">next</code> package.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code class=\"language-diff\"># ./.github/workflows/deploy.workflow.yml\n\nname: deploy-workflow\non: [push] # [A]\njobs:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> deploy-job:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   runs-on: ubuntu-latest # [B]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   steps:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/checkout@v2 # [C]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/setup-node@v2 # [D]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         node-version: '12'</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">     - run: npm install # [E]</span></span>\n</code></pre></div>\n<p><strong>[E]</strong> Ah, our old friend.</p>\n<hr>\n<p>Now that the dependencies are installed, let’s add the step to build the static files.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code class=\"language-diff\"># ./.github/workflows/deploy.workflow.yml\n\nname: deploy-workflow\non: [push] # [A]\njobs:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> deploy-job:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   runs-on: ubuntu-latest # [B]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   steps:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/checkout@v2 # [C]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/setup-node@v2 # [D]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         node-version: '12'</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm install # [E]</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">     - run: npm run build # [F]</span></span>\n</code></pre></div>\n<p><strong>[F]</strong> What the heck is <code class=\"language-unknown\">build</code> you ask? It’s a script defined in <code class=\"language-unknown\">package.json</code> that runs:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">next build <span class=\"token operator\">&#x26;&#x26;</span> next <span class=\"token builtin class-name\">export</span> -o docs\n</code></pre></div>\n<p>See the <a href=\"https://nextjs.org/docs/advanced-features/static-html-export\">docs</a>. TL;DR, these are the Next.js commands to build the files for the SSG site, and export them to the <code class=\"language-unknown\">docs</code> folder.</p>\n<hr>\n<p>Lastly, add the step to commit and push the updates to the <code class=\"language-unknown\">docs</code> folder to the repo.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code class=\"language-diff\"># ./.github/workflows/deploy.workflow.yml\n\nname: deploy-workflow\non: [push] # [A]\njobs:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> deploy-job:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   runs-on: ubuntu-latest # [B]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   steps:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/checkout@v2 # [C]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/setup-node@v2 # [D]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         node-version: '12'</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm install # [E]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm run build # [F]</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">     - uses: stefanzweifel/git-auto-commit-action@v4 # [G]</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         commit_message: Automated publish</span></span>\n</code></pre></div>\n<p><strong>[G]</strong> This <a href=\"https://github.com/marketplace/actions/git-auto-commit\">action</a> will commit changes made in the Runner environment, and push the commit to the GitHub repo. The default commit message will be “Automated publish”.</p>\n<p>Now, pushing a change to the repo will automatically deploy my SSG site to GitHub Pages. 🎉</p>\n<p>I can now stare at the pipeline in the <a href=\"https://github.com/suhanw/suhanw.github.io/actions\">Actions tab of my GitHub repo</a>.</p>\n<hr>\n<h3>Caching</h3>\n<p>I realized that the job runs a fresh <code class=\"language-unknown\">npm install</code> every time I push a commit. So let's introduce caching so that a fresh install occurs only when <code class=\"language-unknown\">package-lock.json</code> changes.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code class=\"language-diff\"># ./.github/workflows/deploy.workflow.yml\n\nname: deploy-workflow\non: [push] # [A]\njobs:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> deploy-job:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   runs-on: ubuntu-latest # [B]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   steps:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/checkout@v2 # [C]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/setup-node@v2 # [D]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         node-version: '12'</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">     - uses: actions/cache@v2 # [H]</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         path: ${{ github.workspace }}/node_modules</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}</span>\n<span class=\"token line\"></span></span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm install # [E]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm run build # [F]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: stefanzweifel/git-auto-commit-action@v4 # [G]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         commit_message: Automated publish</span></span>\n</code></pre></div>\n<p><strong>[H]</strong> This <a href=\"https://github.com/actions/cache\">action</a> caches the <code class=\"language-unknown\">node_modules</code> folder across builds, and makes the Runner use the cache as long as  <code class=\"language-unknown\">package-lock.json</code> doesn’t change.</p>\n<p>Additionally, noticed that <code class=\"language-unknown\">next build</code> issues the following warning about lack of caching.</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">warn  - No build cache found. Please configure build caching for faster rebuilds. \nRead more: https://err.sh/next.js/no-cache</code></pre></div>\n<p>I love it when the warning links you to the <a href=\"https://nextjs.org/docs/messages/no-cache#github-actions\">answer</a> to fix it. Good job Vercel.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code class=\"language-diff\"># ./.github/workflows/deploy.workflow.yml\n\nname: deploy-workflow\non: [push] # [A]\njobs:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> deploy-job:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   runs-on: ubuntu-latest # [B]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   steps:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/checkout@v2 # [C]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/setup-node@v2 # [D]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         node-version: '12'</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: actions/cache@v2 # [H]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">         path: ${{ github.workspace }}/node_modules</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">         path: |</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           ${{ github.workspace }}/node_modules</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           ${{ github.workspace }}/.next/cache # [I]</span>\n<span class=\"token line\"></span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">         key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}</span>\n<span class=\"token line\"></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">         # Generate a new cache whenever packages or source files change.</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js') }}</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         # If source files changed but packages didn't, rebuild from a prior cache. </span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         restore-keys: |</span>\n<span class=\"token line\"></span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-</span>\n<span class=\"token line\"></span></span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm install # [E]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - run: npm run build # [F]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">     - uses: stefanzweifel/git-auto-commit-action@v4 # [G]</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       with:</span>\n<span class=\"token line\"></span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">         commit_message: Automated publish</span></span>\n</code></pre></div>\n<p><strong>[I]</strong> Next.js stores its cache in the <code class=\"language-unknown\">.next/cache</code> directory. This will persist the cache across builds for faster application rebuilds. For example, if I only updated my codebase without updating or adding any new dependencies, this avoids re-bundling the existing dependencies.</p>\n<p>This improved deployment time by about ~30%! 🥰</p>\n<hr>\n<h3>Read More</h3>\n<ul>\n<li><a href=\"https://www.suhanwijaya.com/posts/deploy-react-ssr-to-production\">Deploy React SSR to Production</a></li>\n<li><a href=\"https://www.suhanwijaya.com/posts/intro-to-react-server-side-rendering\">Intro to React Server Side Rendering</a></li>\n<li><a href=\"https://www.suhanwijaya.com/posts/decouple-data-from-ui-with-react-hooks\">Decouple Data from UI with React Hooks</a></li>\n</ul>\n<hr>\n<p>📫 <em>Let’s connect on</em> <a href=\"https://www.linkedin.com/in/suhanwijaya/\"><em>LinkedIn</em></a> <em>or <em><a href=\"https://twitter.com/suhanw\"><em>Twitter</em></a></em>!</em></p>\n","pin_order":1,"title":"Use GitHub Actions to Deploy a Next.js SSG Site","description":"Automate all the things!","image":"https://www.suhanwijaya.com/images/use-github-actions-deploy-nextjs-ssg-site.jpeg","tags":"nextjs,technology,javascript,github","author":"Suhan Wijaya","date":"2021-09-24"}},"__N_SSG":true}