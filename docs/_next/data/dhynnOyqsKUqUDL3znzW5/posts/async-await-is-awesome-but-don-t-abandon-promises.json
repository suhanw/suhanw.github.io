{"pageProps":{"postData":{"id":"async-await-is-awesome-but-don-t-abandon-promises","contentHtml":"<figure>\n\t<img src='https://miro.medium.com/max/2746/1*vjATL-EAN7xvJf0kjMUh5Q.png'>\n\t<figcaption>Shoutout to <a href=\"https://medium.com/u/4c5633187eea\">Cassidy Williams</a> üòÄ</figcaption>\n</figure>\n<hr>\n<p>Let‚Äôs create a button that will:</p>\n<ul>\n<li>perform an expensive synchronous operation,</li>\n<li>fire 2 AJAX requests, and</li>\n<li>update the DOM based on the AJAX responses.</li>\n</ul>\n<p>Here is the markup.</p>\n<script src='https://gist.github.com/suhanw/b7d915ac044a8934d720629f4466c25e.js'></script>\n<p>Here are the functions. Let‚Äôs also measure the duration of each operation with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/measure\">Performance API</a>, which visualizes when and how long each function executes on the Chrome DevTools Performance Timeline. (Thanks to <a href=\"https://jsonplaceholder.typicode.com\">JSONPlaceholder</a> for the dummy endpoints.)</p>\n<script src='https://gist.github.com/suhanw/8e984392ffc4974e3654dda7082c6aff.js'></script>\n<hr>\n<p>You‚Äôre still here? Good, here comes the interesting part: writing the <code class=\"language-unknown\">onclick</code> handler for the button. Since all the cool kids are doing it, let‚Äôs use <code class=\"language-unknown\">async / await</code>.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">someSyncOperation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Expensive sync operation </span>\n\n   <span class=\"token keyword\">const</span> postJson <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetchPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AJAX request #1</span>\n\n   <span class=\"token keyword\">const</span> commentsJson <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AJAX request #2</span>\n\n   <span class=\"token function\">appendPostDOM</span><span class=\"token punctuation\">(</span>postJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">appendCommentsDOM</span><span class=\"token punctuation\">(</span>commentsJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Here is the Performance Timeline after clicking the button.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1024/1*IPbydXJik0QO9KfFCcx97g.png\" alt=\"\"></p>\n<p>Let‚Äôs take a closer look.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1024/1*Afxib_uy8WZ53t31PLEX1w.png\" alt=\"\"></p>\n<p>Makes sense, plenty of articles out there about how <code class=\"language-unknown\">async / await</code> turns asynchronous code into blocking code. FYI, each bar is about 2 seconds when throttling the network to ‚ÄúSlow 3G‚Äù.</p>\n<p><strong>So a total execution time of 6 seconds.</strong></p>\n<hr>\n<p>OK. The <code class=\"language-unknown\">fetchPost</code> and <code class=\"language-unknown\">fetchComments</code> can be executed in parallel, so let‚Äôs use the <code class=\"language-unknown\">await Promise.all</code> combo.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">someSyncOperation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>postJson<span class=\"token punctuation\">,</span> commentsJson<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">fetchPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">appendPostDOM</span><span class=\"token punctuation\">(</span>postJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">appendCommentsDOM</span><span class=\"token punctuation\">(</span>commentsJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"https://cdn-images-1.medium.com/max/1010/1*37EwgrRI3pE2GHO9axxQpA.png\" alt=\"\"></p>\n<p><strong>The total execution time is now 4 seconds since <code class=\"language-unknown\">fetchPost</code> and <code class=\"language-unknown\">fetchComments</code> execute in parallel.</strong></p>\n<hr>\n<p>OK. Since <code class=\"language-unknown\">someSyncOperation</code> is not dependent on the AJAX requests, let‚Äôs see if moving it to the last line in the function speeds things up.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>postJson<span class=\"token punctuation\">,</span> commentsJson<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">fetchPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">appendPostDOM</span><span class=\"token punctuation\">(</span>postJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">appendCommentsDOM</span><span class=\"token punctuation\">(</span>commentsJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">someSyncOperation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"https://cdn-images-1.medium.com/max/1024/1*LIFtuI-vycSo2BLz15jZVg.png\" alt=\"\"></p>\n<p><strong>Nope, the total execution time is still 4 seconds.</strong></p>\n<hr>\n<p>OK. It‚Äôs time to go ‚Äúfull <code class=\"language-unknown\">Promise</code>‚Äù.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">fetchPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>postJson<span class=\"token punctuation\">,</span> commentsJson<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">appendPostDOM</span><span class=\"token punctuation\">(</span>postJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">appendCommentsDOM</span><span class=\"token punctuation\">(</span>commentsJson<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">someSyncOperation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"https://cdn-images-1.medium.com/max/1000/1*sBJ0Vh_BHYVCzm4BF0dQoQ.png\" alt=\"\"></p>\n<p><strong>Going ‚Äúfull <code class=\"language-unknown\">Promise</code>‚Äù cuts total execution time to 2 seconds.</strong></p>\n<p>The reason why this works deserves its own article, but <a href=\"http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\">here is an awesome explainer</a>.</p>\n<p>Today I learned.</p>\n<hr>\n<figure>\n\t<img src='https://cdn-images-1.medium.com/max/720/1*-WWI7e_QvvXBYp7BPzw0PA.jpeg'>\n\t<figcaption>Source: <a href=\"https://programmerhumour.tumblr.com/post/633961754778533888/google-my-saviour\">Programmer Humor</a></figcaption>\n</figure>\n<hr>\n<h3>Bonus</h3>\n<p>For the die-hard <code class=\"language-unknown\">async / await</code> fans out there, I learned (literally on the day of writing this story) that the following snippet actually does the same thing. Credit to <a href=\"https://medium.com/better-programming/an-extremely-easy-tip-to-improve-web-performance-with-async-await-b609e7e65744\">this article</a> by <a href=\"https://medium.com/u/994dcd5bc2e8\">Moon</a>.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> postPromise <span class=\"token operator\">=</span> <span class=\"token function\">fetchPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> commentsPromise <span class=\"token operator\">=</span> <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">someSyncOperation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> postJson <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> postPromise<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> commentsJson <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> commentsPromise<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">appendPostDOM</span><span class=\"token punctuation\">(</span>postJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">appendCommentsDOM</span><span class=\"token punctuation\">(</span>commentsJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<hr>\n<p>üì´ <em>Hit me up on</em> <a href=\"https://www.linkedin.com/in/suhanwijaya/\"><em>LinkedIn</em></a> <em>or</em> <a href=\"https://twitter.com/suhanw\"><em>Twitter</em></a><em>!</em></p>\n","pin_order":7,"title":"Async/await is awesome, but don‚Äôt abandon Promises","description":"Async/await is awesome, but don‚Äôt abandon Promises","image":"https://miro.medium.com/max/2746/1*vjATL-EAN7xvJf0kjMUh5Q.png","tags":"ui,javascript,webdev,promises","canonical_url":"https://medium.com/javascript-in-plain-english/async-await-is-awesome-but-dont-abandon-promises-f815b3df51dc","date":"2020-11-15"}},"__N_SSG":true}